<?xml version="1.0" encoding="UTF-8"?>
<!-- This file originates from the project https://github.com/openSUSE/doc-kit -->
<!-- This file can be edited downstream. -->
<?xml-stylesheet href="urn:x-suse:xslt:profiling:docbook51-profile.xsl"
 type="text/xml"
 title="Profiling step"?>
<!DOCTYPE article
[
  <!ENTITY % entities SYSTEM "generic-entities.ent">
    %entities;
]>
<article xml:id="concept-securing-with-systemd" xml:lang="en"
 role="concept"
 xmlns="http://docbook.org/ns/docbook" version="5.1"
 xmlns:its="http://www.w3.org/2005/11/its"
 xmlns:xi="http://www.w3.org/2001/XInclude"
 xmlns:xlink="http://www.w3.org/1999/xlink">
  <info>
    <title>Securing services with &systemd;</title>
    <dm:docmanager xmlns:dm="urn:x-suse:ns:docmanager">
      <dm:bugtracker>
        <dm:url>https://bugzilla.suse.com/enter_bug.cgi</dm:url>
        <dm:component>Smart Docs</dm:component>
        <dm:product>Documentation</dm:product>
        <dm:assignee>tbazant@suse.com</dm:assignee>
      </dm:bugtracker>
      <dm:translation>no</dm:translation>
    </dm:docmanager>
  </info>
  <section xml:id="environment-securing-with-systemd">
    <!--to create unique section IDs, amend the TOPIC-ID (without prefix)-->
    <!--example: environment-time-synchronization-ntp-->
    <title>Environment</title>
    <para>
      This document applies to the following products and product versions:
    </para>
    <itemizedlist>
      <listitem>
        <para>
          &sles;&nbsp;15&nbsp;SP4, 15&nbsp;SP3, 15&nbsp;SP2, 15&nbsp;SP1,
          15&nbsp;GA, 12&nbsp;SP5, 12&nbsp;SP4, 12&nbsp;SP3
        </para>
      </listitem>
      <listitem>
        <para>
          &sles4sap;&nbsp;15&nbsp;SP4, 15&nbsp;SP3, 15&nbsp;SP2, 15&nbsp;SP1,
          15&nbsp;GA, 12&nbsp;SP5, 12&nbsp;SP4, 12&nbsp;SP3
        </para>
      </listitem>
      <listitem>
        <para>
          &sleha;&nbsp;15&nbsp;SP4, 15&nbsp;SP3, 15&nbsp;SP2, 15&nbsp;SP1,
          15&nbsp;GA, 12&nbsp;SP5, 12&nbsp;SP4, 12&nbsp;SP3
        </para>
      </listitem>
      <listitem>
        <para>
          &slehpc;&nbsp;15&nbsp;SP4, 15&nbsp;SP3, 15&nbsp;SP2, 15&nbsp;SP1,
          15&nbsp;GA
        </para>
      </listitem>
      <listitem>
        <para>
          &sled;&nbsp;15&nbsp;SP4, 15&nbsp;SP3, 15&nbsp;SP2, 15&nbsp;SP1,
          15&nbsp;GA, 12&nbsp;SP5, 12&nbsp;SP4, 12&nbsp;SP3
        </para>
      </listitem>
      <listitem>
        <para>
          &slert;&nbsp;15&nbsp;SP4, 15&nbsp;SP3, 15&nbsp;SP2, 15&nbsp;SP1,
          15&nbsp;GA, 12&nbsp;SP5, 12&nbsp;SP4, 12&nbsp;SP3
        </para>
      </listitem>
    </itemizedlist>
  </section>
  <section xml:id="what-is-securing-with-systemd">
    <title>Why secure services?</title>
    <para>
      Linux increases its security by separating privileges between individual
      components of the operating system. System services already have a
      default level of security. For example, their processes run under their
      own user ID which limits changes they can perform on the system.
    </para>
    <para>
      The default level of privilege separation provides only a basic
      protection. Services can still perform as much changes as normal local
      users, though not as much as &rootuser;. Higher level of system security
      requires limiting what services can perform and prevent them from certain
      privileges that normal users are allowed to use.
    </para>
  </section>
  <section xml:id="how-it-works-securing-with-systemd">
    <title>How does securing services with &systemd; work?</title>
    <para>
      There are several methods to secure processes and applications that you
      can use simultaneously. For example, confining with &selnx; or &aa; is
      recommended. &systemd; can apply additional restrictions to local
      services by using technologies included in the kernel. These restrictions
      are activated by adding specific options to the &systemd; service
      definition and restarting the service.
    </para>
  </section>
  <section xml:id="benefits-securing-with-systemd">
    <title>Benefits of securing services</title>
    <para>
      The main benefit of securing &systemd; services is an increased security
      of the whole operating system and protection of sensitive data contained
      on its file system.
    </para>
  </section>
  <section>
    <title>Techniques of securing &systemd; services</title>
    <para>
      This section introduces techniques that &systemd; offers to protect
      services. To apply the changes, add the required option to the service
      definition file and restart the specific service.
    </para>
    <tip>
      <para>
        All options described here are documented in &systemd;'s man pages. For
        details, refer to <command>man 5 systemd.exec</command>.
      </para>
    </tip>
    <section xml:id="systemd-isolate-from-network">
      <title>Isolating services from the network</title>
<screen>...
[Service]
PrivateNetwork=yes
...</screen>
      <para>
        This option isolates the service and its processes from networking.
        Network interfaces become unavailable to the processes. The only one
        available is the loopback device <literal>lo</literal>, but it is
        isolated from the real host loopback. This is a powerful protection
        from network attacks.
      </para>
      <important>
        <para>
          Some services require the network to be operational. Assigning
          <option>PrivateNetwork=yes</option> to a network-based service, such
          as Apache, does not make sense. Always verify that the service does
          not need access to the network, because it may not be obvious. For
          example, if the local system is configured for an LDAP-based user
          database doing <systemitem>glibc</systemitem> name lookups with
          <command>getpwnam()</command> calls, it may require network access in
          the end.
        </para>
      </important>
    </section>
    <section xml:id="systemd-private-tmp">
      <title>Private <filename>/tmp</filename> directory</title>
<screen>...
[Service]
PrivateTmp=yes
...</screen>
      <para>
        This option provides the service with a private
        <filename>/tmp</filename> isolated from the host system's
        <filename>/tmp</filename>. Normally, <filename>/tmp</filename>is a
        shared space for all local services and users. It has been a major
        source of security problems, such as symlink attacks and DoS
        vulnerabilities due to guessable <filename>/tmp</filename> temporary
        files.
      </para>
      <important>
        <para>
          Some services misuse <filename>/tmp</filename> as a location for IPC
          sockets and other communication primitives. This is almost always a
          vulnerability because if you use it for communication you need
          guessable names which makes your code vulnerable to attacks.
          <filename>/run</filename> is the much safer replacement because it is
          not writable to unprivileged processes.
        </para>
      </important>
    </section>
    <section xml:id="systemd-read-only-directories">
      <title>Read-only and inaccessible directories</title>
<screen>...
[Service]
InaccessibleDirectories=/home
ReadOnlyDirectories=/var
...</screen>
      <para>
        This option makes the specified directories inaccessible for writing
        and/or reading to the service. The example configuration lines make the
        whole tree below <filename>/home</filename> inaccessible to the service
        (the directory appears empty and with 000 access mode), and the tree
        below <filename>/var</filename> becomes read-only.
      </para>
      <note>
        <para>
          The <filename>ReadOnlyDirectories=</filename> option is not
          recursively applied to sub-mounts of the specified directories. For
          example, mounts below <filename>/var</filename> in the example remain
          writable.
        </para>
      </note>
    </section>
    <section xml:id="systemd-limiting-capabilities">
      <title>Limiting kernel capabilities</title>
<screen>...
[Service]
CapabilityBoundingSet=CAP_CHOWN CAP_KILL
...</screen>
      <para>
        This option limits which kernel capabilities a service retains. In the
        example above, only the <literal>CAP_CHOWN</literal> and
        <literal>CAP_KILL</literal> capabilities are retained by the service,
        and the service and any processes it creates cannot obtain any other
        capabilities, not even via setuid binaries. The list of currently
        defined capabilities is available in <command>man 7
        capabilities</command>.
      </para>
      <tip>
        <para>
          To easily identify which processes on your system retain which
          capabilities, use the <command>pscap</command> tool from the
          <package>libcap-ng-utils</package> package.
        </para>
      </tip>
      <tip>
        <para>
          The <literal>~</literal> prefix inverts the meaning of the
          option&mdash;instead of listing all capabilities that the service
          retains, you may list the ones it does not retain:
        </para>
<screen>...
[Service]
CapabilityBoundingSet=~CAP_SYS_PTRACE
...</screen>
      </tip>
    </section>
    <section xml:id="systemd-limiting-resources">
      <title>Limiting resources</title>
      <para>
        You can use <emphasis>resource limits</emphasis> to apply security
        limits on services. Resource limits are useful for controlling
        <emphasis>resources</emphasis> rather than <emphasis>access</emphasis>.
        However, two of them can disable specific operating system features:
        <option>RLIMIT_NPROC=1</option> disables precess forking, while
        <option>RLIMIT_FSIZE=0</option> disables creating non-empty files on
        the file system:
      </para>
<screen>...
[Service]
ExecStart=...
LimitNPROC=1
LimitFSIZE=0
...</screen>
      <note>
        <para>
          The above limits work only if the service drops privileges and runs
          under a non-root user, or drops the <option>CAP_SYS_RESOURCE</option>
          capability, for example, via <option>CapabilityBoundingSet=</option>
          as discussed in <xref linkend="systemd-limiting-capabilities"/>.
          Otherwise, th process can simply increase the resource limits.
        </para>
      </note>
      <tip>
        <para>
          For more information on resource limits, see <command>man 2
          setrlimit</command>.
        </para>
      </tip>
    </section>
  </section>
  <section xml:id="systemd-controlling-device-nodes">
    <title>Controlling device nodes</title>
    <para>
      Devices nodes are an important interface to the kernel and its drivers.
      Because drivers may get much less security checking than the kernel core,
      they are often a major entry point for security hacks. &systemd; can
      control access to devices individually for each service:
    </para>
<screen>...
[Service]
DeviceAllow=/dev/null rw
...</screen>
    <para>
      This option limits access to <filename>/dev/null</filename>, disallowing
      access to any other device nodes.
    </para>
  </section>
  <section xml:id="related-securing-with-systemd">
    <title>Related topics</title>
    <itemizedlist>
      <listitem>
        <para>
          Enabling and disabling &systemd; services is described in
          <link xlink:href="https://documentation.suse.com/smart/linux/html/reference-systemctl-enable-disable-services/reference-systemctl-enable-disable-services.html"/>.
        </para>
      </listitem>
      <listitem>
        <para>
          Managing &systemd; targets with <command>systemctl</command> is
          described in
          <link xlink:href="https://documentation.suse.com/smart/linux/html/reference-managing-systemd-targets-systemctl/reference-systemctl-managing-targets.html"/>.
        </para>
      </listitem>
      <listitem>
        <para>
          Sending termination signals to &systemd; services is described in
          <link xlink:href="https://documentation.suse.com/smart/linux/html/task-send-termination-signals-systemd/task-send-termination-signals-systemd.html"/>.
        </para>
      </listitem>
      <listitem>
        <para>
          Starting and stopping &systemd; services is described in
          <link xlink:href="https://documentation.suse.com/smart/linux/html/reference-systemctl-start-stop-services/reference-systemctl-start-stop-services.html"/>.
        </para>
      </listitem>
    </itemizedlist>
  </section>
</article>
